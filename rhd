# class Fourcal:
# #     def __init__(self):
# #         self.result = 0
# #     def add(self,num1,num2):
# #         self.result = num1 + num2
# #
# #     def sub(self,num1,num2):
# #         self.result = num1 - num2
# #     def mul(self,num1,num2):
# #         self.result = num1 * num2
# #     def div(self,num1,num2):
# #         self.result = num1/num2
# #
# #     def print_result(self):
# #         print(self.result)
# #
# # class MoreFourcal(Fourcal):
# #     def add(self,num1,num2):
# #         super().add(num1,num2)
# #
# # mcal1 = MoreFourcal()
# # mcal1.add(3,4)
# # mcal1.print_result()
# 
# class StackElement:
#     def __init__(self, data, next):
#         self.data = data
#         self.next = next
# 
# class Stack:
#     def __init__(self):
#         self.top = None
# 
#     def push(self, data):
#         if self.top is None:
#             elem = StackElement(data, None)
#             self.top = elem
#         else:
#             elem = StackElement(data,self.top)
#             self.top = elem
# 
#     def pop(self):
#         if self.top is None:
#             return None
#         else:
#             temp = self.top
#             self.top = temp.next
#             return temp.data
# 
#     def peek(self):
#         if self.top is None:
#             return None
#         return self.top.data
# 
# 
# stack = Stack()
# for i in range(1,6):
#     stack.push(i)
#     print(stack.peek())
# 
# for i in range(5):
#     print(stack.pop())
