# a = [3,2,5,1,4]
# for i in range(len(a)):
#     for j in range(i,len(a)):
#         if a[j] == min(a[i:]):
#             a[i],a[j] = a[j],a[i]
# print(a)

# def selection_sort(A):
#     for i in range(len(A)):
#         k = i
#         for j in range(i+1, len(A)):
#             if A[k] > A[j]:
#                 k= j
#         A[k], A[i] = A[i], A[k]
# selection_sort(a)
# print(a)

# def bubble_sort(a):
#     for i in range(len(a)-1,0,-1):
#         for j in range(0,i):
#             if a[j] > a[j+1]:
#                 a[j],a[j+1] = a[j+1], a[j]
# bubble_sort(a)
# print(a)

# def insert_sort(a):
#     for i in range(1,len(a)):
#         k = a[i]
#         j = i
#         while a[j-1] > k and j > 0:
#             a[j] = a[j-1]
#             j -= 1
#         a[j] = k
# insert_sort(a)
# print(a)

# def quick_sort(a,left,right):
#     if right - left < 1:
#         return
#     p = a[(left + right)//2]
#     i = left
#     j = right
#     while i < j:
#         while a[i] < p:
#             i+=1
#         while a[j] > p:
#             j -= 1
#         a[i],a[j] = a[j],a[i]
#
#     quick_sort(a, left, i-1)
#     quick_sort(a, j+1, right)
#
#
# a = [3,9,2,8,5,1,6,4,7]
# quick_sort(a,0,len(a)-1)
# print(a)

# def merge_sort(a):
#     if len(a) < 2:
#         return a
#     m = len(a)//2
#     left_a = merge_sort(a[:m])
#     right_a = merge_sort(a[m:])
#     merged_a = []
#     l = 0
#     r = 0
#     while l < len(left_a) and r < len(right_a):
#         if left_a[l] > right_a[r]:
#             merged_a.append(right_a[r])
#             r+=1
#         else:
#             merged_a.append(left_a[l])
#             l+=1
#     merged_a += left_a[l:]
#     merged_a += right_a[r:]
#     return merged_a
# a = [6,2,8,1,3,9,4,5,10,7]
# print(merge_sort(a))
