# fruits = ['orange','apple','pear','banana','kiwi','apple','banana']
# # print(fruits.count('apple'))
# # print(fruits.index('banana'))
# # fruits.reverse()
# # fruits.append('grape')
# # fruits.sort()
# # print(fruits.pop())
# #
# # stack =[3,4,5]
# # stack.append(6)
# # stack.append(7)
# # print(stack)
# # print(stack.pop())
# # print(stack)
# # print(stack.pop())
# # print(stack.pop())
# # print(stack)
# #
# # queue = [3,4,5]
# # queue.insert(0,6)
# # queue.insert(0,7)
# # print(queue)
# # print(queue.pop())
# # print(queue)
# # print(queue.pop())
# # print(queue.pop())
# # print(queue)
# #
# # from collections import deque
# # queue = deque(['Apple','Banana','Cocount'])
# # queue.appendleft('Durian')
# # queue.appendleft('Eggplant')
# # print(queue)
# # print(queue.pop())
# # print(queue.pop())
# # print(queue)
# #
# # squares = []
# # for x in range(10):
# #     squares.append(x**2)
# # print(squares)
# # print(x)
# #
# # squares = list(map(lambda x: x**2,range(10)))
# #
# # squares = [x**2 for x in range(10)]
# #
# # vec = [-4,-2,0,2,4]
# # [x*2 for x in vec]
# # [x for x in vec if x >= 0]
# # [abs(x) for x in vec]
# # fruits = [' Apple ',' Banana ',' Cocount ']
# # [f.strip() for f in fruits]
# # [(x,x**2) for x in range(6)]
# # vec = [[1,2,3],[4,5,6],[7,8,9]]
# # [num for elem in vec for num in elem]
# # #new_list = []
# # # for elem in vec:
# #     # for num in elem:
# #         # new_list.append(num)
# #
# # matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]
# # transposed = [[row[i] for row in matrix]for i in range(4)]
# #
# # transposed = []
# # for i in range(4):
# #     transposed_row = []
# #     for row in matrix:
# #         transposed_row.append(row[i])
# #     transposed.append(transposed_row)
# #
# # list(zip(*matrix))
# 
# # import sys
# # n = int(sys.stdin.readline())
# # stack = [int(sys.stdin.readline())for _ in range(n)]
# # count = 0
# # max_stick = 0
# # while stack:
# #     stick = stack.pop()
# #     if stick > max_stick:
# #         max_stick = stick
# #         count += 1
# # print(count)
# 
# import sys
# from collections import deque
# n = int(sys.stdin.readline())
# queue = deque([num for num in range(1,n+1)])
# t = 1
# while len(queue) != 1:
#     k = t**3%len(queue)
#     for i in range(k):
#         x = queue.popleft()
#         queue.append(x)
#     queue.pop()
#     t += 1
# print(queue[0])
